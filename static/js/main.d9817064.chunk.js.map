{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","alert","preventDefault","placeholder","type","TodoListItem","todo","onRemove","onToggle","style","id","text","checked","cn","onClick","React","memo","TodoList","todos","rowRenderer","index","key","width","height","rowCount","length","rowHeight","list","outline","createBulkTodos","array","i","push","App","setTodos","nextId","useRef","current","concat","map","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9817064.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoTemplate.scss';\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <div className=\"TodoTemplate\">\n      <div className=\"app-title\">일정 관리</div>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default TodoTemplate;\n","import React, { useState, useCallback } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport './TodoInsert.scss';\n\nconst TodoInsert = ({ onInsert }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      if (value === '') {\n        alert('할 일을 입력해주세요');\n        e.preventDefault();\n        return;\n      }\n      onInsert(value);\n      setValue('');\n      e.preventDefault();\n    },\n    [onInsert, value],\n  );\n\n  return (\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\n      <input\n        placeholder=\"할 일을 입력하세요\"\n        value={value}\n        onChange={onChange}\n      ></input>\n      <button type=\"submit\">\n        <MdAdd></MdAdd>\n      </button>\n    </form>\n  );\n};\n\nexport default TodoInsert;\n","import React from 'react';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\nimport './TodoListItem.scss';\nimport cn from 'classnames';\n\nconst TodoListItem = ({ todo, onRemove, onToggle, style }) => {\n  const { id, text, checked } = todo;\n  return (\n    <div className=\"TodoListItem-virtualized\" style={style}>\n      <div className=\"TodoListItem\">\n        <div\n          className={cn('checkbox', { checked })}\n          onClick={() => onToggle(id)}\n        >\n          {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n          <div className=\"text\">{text}</div>\n        </div>\n        <div className=\"remove\" onClick={() => onRemove(id)}>\n          <MdRemoveCircleOutline></MdRemoveCircleOutline>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(TodoListItem);\n","import React, { useCallback } from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\nimport { List } from 'react-virtualized';\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, style }) => {\r\n      const todo = todos[index];\r\n      return (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={key}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          style={style}\r\n        ></TodoListItem>\r\n      );\r\n    },\r\n    [onRemove, onToggle, todos],\r\n  );\r\n\r\n  return (\r\n    <List\r\n      className=\"TodoList\"\r\n      width={512}\r\n      height={412}\r\n      rowCount={todos.length}\r\n      rowHeight={26}\r\n      rowRenderer={rowRenderer}\r\n      list={todos}\r\n      style={{ outline: 'none' }}\r\n    ></List>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 1; i <= 3; i++) {\n    array.push({\n      id: i,\n      text: `할일 ${i}`,\n      checked: false,\n    });\n  }\n  return array;\n}\n\nconst App = () => {\n  const [todos, setTodos] = useState(createBulkTodos);\n  const nextId = useRef(4);\n\n  const onInsert = useCallback((text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    setTodos((todos) => todos.concat(todo));\n    nextId.current += 1;\n  }, []);\n\n  const onToggle = useCallback((id) => {\n    setTodos((todos) => {\n      return todos.map((todo) => {\n        return todo.id === id ? { ...todo, checked: !todo.checked } : todo;\n      });\n    });\n  }, []);\n\n  const onRemove = useCallback((id) => {\n    setTodos((todos) => {\n      return todos.filter((todo) => todo.id !== id);\n    });\n  }, []);\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert}></TodoInsert>\n      <TodoList\n        todos={todos}\n        onRemove={onRemove}\n        onToggle={onToggle}\n      ></TodoList>\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}